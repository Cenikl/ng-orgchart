{"hash":"336ea014640128aecbd6aa7563f9365065bf9973","fesm2022":[{"exports":["ChartContainerComponent","ChartNodeComponent","OrgchartModule"],"facadeModuleId":"C:\\Users\\cedric\\Desktop\\github\\ng-orgchart\\dist\\ng-orgchart\\esm2022\\dabeng-ng-orgchart.mjs","isDynamicEntry":false,"isEntry":true,"isImplicitEntry":false,"moduleIds":["C:\\Users\\cedric\\Desktop\\github\\ng-orgchart\\dist\\ng-orgchart\\esm2022\\lib\\components\\orgchart\\shared\\services\\node-select.service.mjs","C:\\Users\\cedric\\Desktop\\github\\ng-orgchart\\dist\\ng-orgchart\\esm2022\\lib\\components\\orgchart\\shared\\models\\node.model.mjs","C:\\Users\\cedric\\Desktop\\github\\ng-orgchart\\dist\\ng-orgchart\\esm2022\\lib\\components\\orgchart\\chart-node\\chart-node.component.mjs","C:\\Users\\cedric\\Desktop\\github\\ng-orgchart\\dist\\ng-orgchart\\esm2022\\lib\\components\\orgchart\\chart-container\\chart-container.component.mjs","C:\\Users\\cedric\\Desktop\\github\\ng-orgchart\\dist\\ng-orgchart\\esm2022\\lib\\components\\orgchart\\orgchart.module.mjs","C:\\Users\\cedric\\Desktop\\github\\ng-orgchart\\dist\\ng-orgchart\\esm2022\\public-api.mjs","C:\\Users\\cedric\\Desktop\\github\\ng-orgchart\\dist\\ng-orgchart\\esm2022\\dabeng-ng-orgchart.mjs"],"name":"dabeng-ng-orgchart","type":"chunk","dynamicImports":[],"fileName":"dabeng-ng-orgchart.mjs","implicitlyLoadedBefore":[],"importedBindings":{"@angular/core":["*","Injectable","EventEmitter","Component","Input","Output","NgModule"],"@angular/common":["*","CommonModule"],"@angular/platform-browser/animations":["BrowserAnimationsModule"],"rxjs":["Subject"],"@angular/animations":["trigger","state","style","transition","animate"]},"imports":["@angular/core","@angular/common","@angular/platform-browser/animations","rxjs","@angular/animations"],"modules":{"C:\\Users\\cedric\\Desktop\\github\\ng-orgchart\\dist\\ng-orgchart\\esm2022\\lib\\components\\orgchart\\shared\\services\\node-select.service.mjs":{"code":"class NodeSelectService {\n    subject = new Subject();\n    constructor() { }\n    sendSelect(id) {\n        this.subject.next({ id });\n    }\n    clearSelect() {\n        this.subject.next(null);\n    }\n    getSelect() {\n        return this.subject.asObservable();\n    }\n    /** @nocollapse */ static ɵfac = function NodeSelectService_Factory(t) { return new (t || NodeSelectService)(); };\n    /** @nocollapse */ static ɵprov = /** @pureOrBreakMyCode */ i0.ɵɵdefineInjectable({ token: NodeSelectService, factory: NodeSelectService.ɵfac });\n}\n(() => { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NodeSelectService, [{\n        type: Injectable\n    }], () => [], null); })();","originalLength":2402,"removedExports":[],"renderedExports":["NodeSelectService"],"renderedLength":695},"C:\\Users\\cedric\\Desktop\\github\\ng-orgchart\\dist\\ng-orgchart\\esm2022\\lib\\components\\orgchart\\shared\\models\\node.model.mjs":{"code":"class Node {\n    id;\n    name;\n    title;\n    children;\n}","originalLength":655,"removedExports":[],"renderedExports":["Node"],"renderedLength":57},"C:\\Users\\cedric\\Desktop\\github\\ng-orgchart\\dist\\ng-orgchart\\esm2022\\lib\\components\\orgchart\\chart-node\\chart-node.component.mjs":{"code":"const _c0$1 = (a0, a1, a2) => ({ datasource: a0, nodeHeading: a1, nodeContent: a2 });\nconst _c1 = (a0, a1) => ({ \"oc-icon-plus\": a0, \"oc-icon-minus\": a1 });\nfunction ChartNodeComponent_ng_container_1_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n} }\nfunction ChartNodeComponent_i_2_Template(rf, ctx) { if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"i\", 5);\n    i0.ɵɵlistener(\"click\", function ChartNodeComponent_i_2_Template_i_click_0_listener() { i0.ɵɵrestoreView(_r2); const ctx_r2 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r2.toggleChildren()); });\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(1, _c1, ctx_r2.isCollapsed, !ctx_r2.isCollapsed));\n} }\nfunction ChartNodeComponent_div_3_ng_container_1_div_1_ng_container_1_orgchart_node_1_Template(rf, ctx) { if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"orgchart-node\", 11);\n    i0.ɵɵlistener(\"nodeClick\", function ChartNodeComponent_div_3_ng_container_1_div_1_ng_container_1_orgchart_node_1_Template_orgchart_node_nodeClick_0_listener($event) { i0.ɵɵrestoreView(_r5); const ctx_r2 = i0.ɵɵnextContext(5); return i0.ɵɵresetView(ctx_r2.onNodeClick($event)); });\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const j_r6 = i0.ɵɵnextContext().index;\n    const i_r7 = i0.ɵɵnextContext(2).index;\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"datasource\", ctx_r2.datasource.children[i_r7 + j_r6])(\"nodeHeading\", ctx_r2.nodeHeading)(\"nodeContent\", ctx_r2.nodeContent)(\"nodeTemplate\", ctx_r2.nodeTemplate)(\"groupScale\", ctx_r2.groupScale)(\"select\", ctx_r2.select);\n} }\nfunction ChartNodeComponent_div_3_ng_container_1_div_1_ng_container_1_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, ChartNodeComponent_div_3_ng_container_1_div_1_ng_container_1_orgchart_node_1_Template, 1, 6, \"orgchart-node\", 10);\n    i0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const j_r6 = ctx.index;\n    const i_r7 = i0.ɵɵnextContext(2).index;\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", i_r7 + j_r6 < ctx_r2.datasource.children.length);\n} }\nfunction ChartNodeComponent_div_3_ng_container_1_div_1_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵtemplate(1, ChartNodeComponent_div_3_ng_container_1_div_1_ng_container_1_Template, 2, 1, \"ng-container\", 7);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.Arr(ctx_r2.groupScale));\n} }\nfunction ChartNodeComponent_div_3_ng_container_1_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, ChartNodeComponent_div_3_ng_container_1_div_1_Template, 2, 1, \"div\", 8);\n    i0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const i_r7 = ctx.index;\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", i_r7 % ctx_r2.groupScale === 0);\n} }\nfunction ChartNodeComponent_div_3_Template(rf, ctx) { if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 6);\n    i0.ɵɵlistener(\"@expandCollapse.start\", function ChartNodeComponent_div_3_Template_div_animation_expandCollapse_start_0_listener($event) { i0.ɵɵrestoreView(_r4); const ctx_r2 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r2.toggleAnimStart($event)); })(\"@expandCollapse.done\", function ChartNodeComponent_div_3_Template_div_animation_expandCollapse_done_0_listener($event) { i0.ɵɵrestoreView(_r4); const ctx_r2 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r2.toggleAnimEnd($event)); });\n    i0.ɵɵtemplate(1, ChartNodeComponent_div_3_ng_container_1_Template, 2, 1, \"ng-container\", 7);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"@expandCollapse\", ctx_r2.isCollapsed ? \"collapsed\" : \"expanded\")(\"ngStyle\", ctx_r2.ecStyles);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.datasource.children);\n} }\nfunction ChartNodeComponent_ng_template_4_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"div\", 13);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const nodeData_r8 = ctx.datasource;\n    const heading_r9 = ctx.nodeHeading;\n    const content_r10 = ctx.nodeContent;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(nodeData_r8[heading_r9]);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(nodeData_r8[content_r10]);\n} }\nclass ChartNodeComponent {\n    nodeSelectService;\n    datasource;\n    nodeHeading;\n    nodeContent;\n    nodeTemplate;\n    groupScale;\n    select;\n    nodeClick = new EventEmitter();\n    Arr = Array; // Array type captured in a variable\n    isCollapsed = false;\n    ecStyles;\n    isSelected;\n    subscription;\n    constructor(nodeSelectService) {\n        this.nodeSelectService = nodeSelectService;\n        // subscribe to node selection status\n        this.subscription = this.nodeSelectService.getSelect().subscribe(selection => {\n            if (selection && selection.id) {\n                this.isSelected = this.datasource.id === selection.id;\n            }\n            else { // clear selection when empty selection received\n                this.isSelected = false;\n            }\n        });\n    }\n    ngOnDestroy() {\n        // unsubscribe to ensure no memory leaks\n        this.subscription.unsubscribe();\n    }\n    ngOnInit() {\n    }\n    toggleChildren() {\n        this.isCollapsed = !this.isCollapsed;\n    }\n    toggleAnimStart(event) {\n        if (this.isCollapsed) {\n            // 如果折叠的是根结点的子节点，那么根结点向下的连接线需要隐藏\n            if (event.element.parentElement &&\n                event.element.parentElement.parentElement &&\n                event.element.parentElement.parentElement.classList.contains('orgchart')) {\n                event.element.previousElementSibling.classList.add('oc-is-collapsed');\n            }\n        }\n        else { // 刚一展开的时候，需要马上把子节点们显示出来，以便看到“下滑”效果\n            this.ecStyles = {\n                display: 'flex'\n            };\n        }\n    }\n    toggleAnimEnd(event) {\n        if (this.isCollapsed) { // 折叠时，“上滑”动画结束后，需要将子节点们隐藏，以便其不占用空间\n            this.ecStyles = {\n                display: 'none'\n            };\n        }\n        else {\n            // 如果展开的是根结点的子节点，那么根结点向下的连接线需要显示\n            if (event.element.parentElement &&\n                event.element.parentElement.parentElement &&\n                event.element.parentElement.parentElement.classList.contains('orgchart')) {\n                event.element.previousElementSibling.classList.remove('oc-is-collapsed');\n            }\n        }\n    }\n    onClickNode(e) {\n        this.nodeClick.emit(this.datasource);\n        if (this.select === 'single') {\n            this.nodeSelectService.sendSelect(this.datasource.id);\n        }\n        else if (this.select === 'multiple') {\n            this.isSelected = !this.isSelected;\n        }\n    }\n    onNodeClick(e) {\n        this.nodeClick.emit(e);\n    }\n    /** @nocollapse */ static ɵfac = function ChartNodeComponent_Factory(t) { return new (t || ChartNodeComponent)(i0.ɵɵdirectiveInject(NodeSelectService)); };\n    /** @nocollapse */ static ɵcmp = /** @pureOrBreakMyCode */ i0.ɵɵdefineComponent({ type: ChartNodeComponent, selectors: [[\"orgchart-node\"]], inputs: { datasource: \"datasource\", nodeHeading: \"nodeHeading\", nodeContent: \"nodeContent\", nodeTemplate: \"nodeTemplate\", groupScale: \"groupScale\", select: \"select\" }, outputs: { nodeClick: \"nodeClick\" }, decls: 6, vars: 11, consts: [[\"defaultNodeTemplate\", \"\"], [1, \"oc-node\", 3, \"click\", \"id\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [\"class\", \"oc-toggle-btn oc-icon\", 3, \"ngClass\", \"click\", 4, \"ngIf\"], [\"class\", \"oc-groups\", 3, \"ngStyle\", 4, \"ngIf\"], [1, \"oc-toggle-btn\", \"oc-icon\", 3, \"click\", \"ngClass\"], [1, \"oc-groups\", 3, \"ngStyle\"], [4, \"ngFor\", \"ngForOf\"], [\"class\", \"oc-group\", 4, \"ngIf\"], [1, \"oc-group\"], [3, \"datasource\", \"nodeHeading\", \"nodeContent\", \"nodeTemplate\", \"groupScale\", \"select\", \"nodeClick\", 4, \"ngIf\"], [3, \"nodeClick\", \"datasource\", \"nodeHeading\", \"nodeContent\", \"nodeTemplate\", \"groupScale\", \"select\"], [1, \"oc-node-heading\"], [1, \"oc-node-content\"]], template: function ChartNodeComponent_Template(rf, ctx) { if (rf & 1) {\n            const _r1 = i0.ɵɵgetCurrentView();\n            i0.ɵɵelementStart(0, \"div\", 1);\n            i0.ɵɵlistener(\"click\", function ChartNodeComponent_Template_div_click_0_listener($event) { i0.ɵɵrestoreView(_r1); return i0.ɵɵresetView(ctx.onClickNode($event)); });\n            i0.ɵɵtemplate(1, ChartNodeComponent_ng_container_1_Template, 1, 0, \"ng-container\", 2)(2, ChartNodeComponent_i_2_Template, 1, 4, \"i\", 3);\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(3, ChartNodeComponent_div_3_Template, 2, 3, \"div\", 4)(4, ChartNodeComponent_ng_template_4_Template, 4, 2, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n        } if (rf & 2) {\n            const defaultNodeTemplate_r11 = i0.ɵɵreference(5);\n            i0.ɵɵclassProp(\"oc-is-selected\", ctx.isSelected);\n            i0.ɵɵproperty(\"id\", ctx.datasource.id);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngTemplateOutlet\", ctx.nodeTemplate ? ctx.nodeTemplate : defaultNodeTemplate_r11)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction3(7, _c0$1, ctx.datasource, ctx.nodeHeading, ctx.nodeContent));\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.datasource.children);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.datasource.children);\n        } }, dependencies: [i2.NgClass, i2.NgForOf, i2.NgIf, i2.NgTemplateOutlet, i2.NgStyle, ChartNodeComponent], styles: [\".oc-groups[_ngcontent-%COMP%]{display:flex;flex-direction:row}.orgchart > [_nghost-%COMP%]{align-items:center}.orgchart > [_nghost-%COMP%] > .oc-node[_ngcontent-%COMP%]:after{content:\\\"\\\";box-sizing:border-box;bottom:-10px;left:50%;height:10px;width:2px;position:absolute;background-color:#d9534fcc}.orgchart > [_nghost-%COMP%] > .oc-node.oc-is-collapsed[_ngcontent-%COMP%]:after{display:none}.orgchart > [_nghost-%COMP%] > .oc-groups[_ngcontent-%COMP%] > .oc-group[_ngcontent-%COMP%] > [_ngcontent-%COMP%]:before{height:35px;top:-10px}.oc-node[_ngcontent-%COMP%]{width:140px;font-family:Arial;box-sizing:border-box;position:relative;padding:3px;margin:0;border:2px solid transparent;text-align:center}.oc-node[_ngcontent-%COMP%]:hover, .oc-node.oc-is-selected[_ngcontent-%COMP%]{background-color:#eed93680}.oc-node[_ngcontent-%COMP%]   .oc-node-heading[_ngcontent-%COMP%]{box-sizing:border-box;padding:2px;margin:0;width:130px;height:20px;text-align:center;font-size:.75rem;font-weight:700;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;background-color:#d9534fcc;color:#fff;border-radius:4px 4px 0 0}.oc-node[_ngcontent-%COMP%]   .oc-node-content[_ngcontent-%COMP%]{box-sizing:border-box;padding:2px;width:130px;height:20px;font-size:.625rem;border:1px solid rgba(217,83,79,.8);border-radius:0 0 4px 4px;text-align:center;background-color:#fff;color:#333;text-overflow:ellipsis;white-space:nowrap}.oc-node[_ngcontent-%COMP%]   .oc-toggle-btn[_ngcontent-%COMP%]{color:#fff;background-color:#449d4499;position:absolute;left:5px;bottom:5px}.oc-group[_ngcontent-%COMP%]{display:flex;flex-direction:column;padding-left:20px;position:relative;padding-top:20px}.orgchart > [_nghost-%COMP%] > .oc-groups[_ngcontent-%COMP%] > .oc-group[_ngcontent-%COMP%]:first-child{padding-left:10px}.oc-group[_ngcontent-%COMP%]:not(:last-child):before{content:\\\"\\\";box-sizing:border-box;top:10px;left:12px;width:calc(100% - 2px);position:absolute;border-color:#d9534fcc;border-style:solid;border-width:0 0 2px 0}.orgchart > [_nghost-%COMP%] > .oc-groups[_ngcontent-%COMP%] > .oc-group[_ngcontent-%COMP%]:first-child:before{width:calc(100% + 8px);left:2px}[_nghost-%COMP%]{position:relative;display:flex;flex-direction:column}[_nghost-%COMP%]:not(:last-child){padding-bottom:10px}.oc-group > [_nghost-%COMP%]:before{content:\\\"\\\";box-sizing:border-box;height:35px;width:10px;position:absolute;left:-10px;top:-10px;border-color:#d9534fcc;border-style:solid;border-width:0 0 2px 2px}.oc-group:first-child > [_nghost-%COMP%]:first-child:before{height:45px;top:-20px}[_nghost-%COMP%]:not(:last-child):after{content:\\\"\\\";box-sizing:border-box;height:calc(100% - 35px);width:10px;position:absolute;left:-10px;top:25px;border-color:#d9534fcc;border-style:solid;border-width:0 0 0 2px}.oc-icon[_ngcontent-%COMP%]{display:inline-block;width:1rem;height:1rem;line-height:1rem;text-align:center}.oc-icon-minus[_ngcontent-%COMP%]:before{content:\\\"\\\\2212\\\"}.oc-icon-plus[_ngcontent-%COMP%]:before{content:\\\"+\\\"}\"], data: { animation: [\n                trigger('expandCollapse', [\n                    state('expanded', style({\n                        transform: 'translateY(0)',\n                        opacity: 1\n                    })),\n                    state('collapsed', style({\n                        transform: 'translateY(-50px)',\n                        opacity: 0\n                    })),\n                    transition('expanded => collapsed', [animate('0.2s')]),\n                    transition('collapsed => expanded', [animate('0.2s')])\n                ])\n            ] } });\n}\n(() => { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ChartNodeComponent, [{\n        type: Component,\n        args: [{ selector: 'orgchart-node', animations: [\n                    trigger('expandCollapse', [\n                        state('expanded', style({\n                            transform: 'translateY(0)',\n                            opacity: 1\n                        })),\n                        state('collapsed', style({\n                            transform: 'translateY(-50px)',\n                            opacity: 0\n                        })),\n                        transition('expanded => collapsed', [animate('0.2s')]),\n                        transition('collapsed => expanded', [animate('0.2s')])\n                    ])\n                ], template: \"<div class=\\\"oc-node\\\" [id]=\\\"datasource.id\\\" [class.oc-is-selected]=\\\"isSelected\\\" (click)=\\\"onClickNode($event)\\\">\\r\\n\\t<ng-container\\r\\n\\t\\t*ngTemplateOutlet=\\\"nodeTemplate ? nodeTemplate : defaultNodeTemplate; context:{ datasource:datasource,nodeHeading: nodeHeading, nodeContent: nodeContent }\\\">\\r\\n\\t</ng-container>\\r\\n\\t<i *ngIf=\\\"datasource.children\\\" [ngClass]=\\\"{'oc-icon-plus': isCollapsed, 'oc-icon-minus': !isCollapsed}\\\" (click)=\\\"toggleChildren()\\\" class=\\\"oc-toggle-btn oc-icon\\\"></i>\\r\\n</div>\\r\\n<div *ngIf=\\\"datasource.children\\\" [@expandCollapse]=\\\"isCollapsed ? 'collapsed' : 'expanded'\\\"\\r\\n\\t(@expandCollapse.start)=\\\"toggleAnimStart($event)\\\" (@expandCollapse.done)=\\\"toggleAnimEnd($event)\\\"\\r\\n\\t[ngStyle]=\\\"ecStyles\\\" class=\\\"oc-groups\\\">\\r\\n\\t<ng-container *ngFor=\\\"let node of datasource.children;let i=index\\\">\\r\\n\\t\\t<div *ngIf=\\\"i % groupScale === 0\\\" class=\\\"oc-group\\\">\\r\\n\\t\\t\\t<ng-container *ngFor=\\\"let temp of Arr(groupScale);let j=index;\\\">\\r\\n\\t\\t\\t\\t<orgchart-node *ngIf=\\\"i + j < datasource.children.length\\\" [datasource]=\\\"datasource.children[i + j]\\\"\\r\\n\\t\\t\\t\\t\\t[nodeHeading]=\\\"nodeHeading\\\" [nodeContent]=\\\"nodeContent\\\" [nodeTemplate]=\\\"nodeTemplate\\\"\\r\\n\\t\\t\\t\\t\\t[groupScale]=\\\"groupScale\\\" [select]=\\\"select\\\" (nodeClick)=\\\"onNodeClick($event)\\\">\\r\\n\\t\\t\\t\\t</orgchart-node>\\r\\n\\t\\t\\t</ng-container>\\r\\n\\t\\t</div>\\r\\n\\t</ng-container>\\r\\n</div>\\r\\n\\r\\n<ng-template #defaultNodeTemplate let-nodeData=\\\"datasource\\\" let-heading=\\\"nodeHeading\\\" let-content=\\\"nodeContent\\\">\\r\\n\\t<div class=\\\"oc-node-heading\\\">{{nodeData[heading]}}</div>\\r\\n\\t<div class=\\\"oc-node-content\\\">{{nodeData[content]}}</div>\\r\\n</ng-template>\", styles: [\".oc-groups{display:flex;flex-direction:row}.orgchart>:host{align-items:center}.orgchart>:host>.oc-node:after{content:\\\"\\\";box-sizing:border-box;bottom:-10px;left:50%;height:10px;width:2px;position:absolute;background-color:#d9534fcc}.orgchart>:host>.oc-node.oc-is-collapsed:after{display:none}.orgchart>:host>.oc-groups>.oc-group>:host:before{height:35px;top:-10px}.oc-node{width:140px;font-family:Arial;box-sizing:border-box;position:relative;padding:3px;margin:0;border:2px solid transparent;text-align:center}.oc-node:hover,.oc-node.oc-is-selected{background-color:#eed93680}.oc-node .oc-node-heading{box-sizing:border-box;padding:2px;margin:0;width:130px;height:20px;text-align:center;font-size:.75rem;font-weight:700;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;background-color:#d9534fcc;color:#fff;border-radius:4px 4px 0 0}.oc-node .oc-node-content{box-sizing:border-box;padding:2px;width:130px;height:20px;font-size:.625rem;border:1px solid rgba(217,83,79,.8);border-radius:0 0 4px 4px;text-align:center;background-color:#fff;color:#333;text-overflow:ellipsis;white-space:nowrap}.oc-node .oc-toggle-btn{color:#fff;background-color:#449d4499;position:absolute;left:5px;bottom:5px}.oc-group{display:flex;flex-direction:column;padding-left:20px;position:relative;padding-top:20px}.orgchart>:host>.oc-groups>.oc-group:first-child{padding-left:10px}.oc-group:not(:last-child):before{content:\\\"\\\";box-sizing:border-box;top:10px;left:12px;width:calc(100% - 2px);position:absolute;border-color:#d9534fcc;border-style:solid;border-width:0 0 2px 0}.orgchart>:host>.oc-groups>.oc-group:first-child:before{width:calc(100% + 8px);left:2px}:host{position:relative;display:flex;flex-direction:column}:host:not(:last-child){padding-bottom:10px}.oc-group>:host:before{content:\\\"\\\";box-sizing:border-box;height:35px;width:10px;position:absolute;left:-10px;top:-10px;border-color:#d9534fcc;border-style:solid;border-width:0 0 2px 2px}.oc-group:first-child>:host:first-child:before{height:45px;top:-20px}:host:not(:last-child):after{content:\\\"\\\";box-sizing:border-box;height:calc(100% - 35px);width:10px;position:absolute;left:-10px;top:25px;border-color:#d9534fcc;border-style:solid;border-width:0 0 0 2px}.oc-icon{display:inline-block;width:1rem;height:1rem;line-height:1rem;text-align:center}.oc-icon-minus:before{content:\\\"\\\\2212\\\"}.oc-icon-plus:before{content:\\\"+\\\"}\\n\"] }]\n    }], () => [{ type: NodeSelectService }], { datasource: [{\n            type: Input\n        }], nodeHeading: [{\n            type: Input\n        }], nodeContent: [{\n            type: Input\n        }], nodeTemplate: [{\n            type: Input\n        }], groupScale: [{\n            type: Input\n        }], select: [{\n            type: Input\n        }], nodeClick: [{\n            type: Output\n        }] }); })();\n(() => { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassDebugInfo(ChartNodeComponent, { className: \"ChartNodeComponent\", filePath: \"lib\\\\components\\\\orgchart\\\\chart-node\\\\chart-node.component.ts\", lineNumber: 38 }); })();","originalLength":32753,"removedExports":[],"renderedExports":["ChartNodeComponent"],"renderedLength":18792},"C:\\Users\\cedric\\Desktop\\github\\ng-orgchart\\dist\\ng-orgchart\\esm2022\\lib\\components\\orgchart\\chart-container\\chart-container.component.mjs":{"code":"const _c0 = (a0, a1) => ({ \"transform\": a0, \"cursor\": a1 });\nclass ChartContainerComponent {\n    nodeSelectService;\n    datasource;\n    nodeHeading = 'name';\n    nodeContent = 'title';\n    nodeTemplate;\n    groupScale = 3;\n    pan = false;\n    zoom = false;\n    zoomoutLimit = 0.5;\n    zoominLimit = 7;\n    containerClass = '';\n    chartClass = '';\n    select = 'single';\n    nodeClick = new EventEmitter();\n    chartClick = new EventEmitter();\n    cursorVal = 'default';\n    panning = false;\n    startX = 0;\n    startY = 0;\n    transformVal = '';\n    constructor(nodeSelectService) {\n        this.nodeSelectService = nodeSelectService;\n    }\n    ngOnInit() {\n    }\n    panEndHandler() {\n        this.panning = false;\n        this.cursorVal = 'default';\n    }\n    panHandler(e) {\n        let newX = 0;\n        let newY = 0;\n        if (!e.targetTouches) {\n            // pand on desktop\n            newX = e.pageX - this.startX;\n            newY = e.pageY - this.startY;\n        }\n        else if (e.targetTouches.length === 1) {\n            // pan on mobile device\n            newX = e.targetTouches[0].pageX - this.startX;\n            newY = e.targetTouches[0].pageY - this.startY;\n        }\n        else if (e.targetTouches.length > 1) {\n            return;\n        }\n        if (this.transformVal === '') {\n            if (this.transformVal.indexOf('3d') === -1) {\n                this.transformVal = 'matrix(1,0,0,1,' + newX + ',' + newY + ')';\n            }\n            else {\n                this.transformVal =\n                    'matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,' + newX + ', ' + newY + ',0,1)';\n            }\n        }\n        else {\n            const matrix = this.transformVal.split(',');\n            if (this.transformVal.indexOf('3d') === -1) {\n                matrix[4] = newX.toString();\n                matrix[5] = newY + ')';\n            }\n            else {\n                matrix[12] = newX.toString();\n                matrix[13] = newY.toString();\n            }\n            this.transformVal = matrix.join(',');\n        }\n    }\n    panStartHandler(e) {\n        if (e.target.querySelectorAll('.node') && e.target.querySelectorAll('.node').length) {\n            this.panning = false;\n            return;\n        }\n        else {\n            this.cursorVal = 'move';\n            this.panning = true;\n        }\n        let lastX = 0;\n        let lastY = 0;\n        if (this.transformVal !== '') {\n            const matrix = this.transformVal.split(',');\n            if (this.transformVal.indexOf('3d') === -1) {\n                lastX = parseInt(matrix[4], 10);\n                lastY = parseInt(matrix[5], 10);\n            }\n            else {\n                lastX = parseInt(matrix[12], 10);\n                lastY = parseInt(matrix[13], 10);\n            }\n        }\n        if (!e.targetTouches) {\n            // pand on desktop\n            this.startX = e.pageX - lastX;\n            this.startY = e.pageY - lastY;\n        }\n        else if (e.targetTouches.length === 1) {\n            // pan on mobile device\n            this.startX = e.targetTouches[0].pageX - lastX;\n            this.startY = e.targetTouches[0].pageY - lastY;\n        }\n        else if (e.targetTouches.length > 1) {\n            return;\n        }\n    }\n    setChartScale(newScale) {\n        let matrix = [];\n        let targetScale = 1;\n        if (this.transformVal === '') {\n            this.transformVal =\n                'matrix(' + newScale + ', 0, 0, ' + newScale + ', 0, 0)';\n        }\n        else {\n            matrix = this.transformVal.split(',');\n            if (this.transformVal.indexOf('3d') === -1) {\n                targetScale = Math.abs(parseFloat(matrix[3]) * newScale);\n                if (targetScale > this.zoomoutLimit && targetScale < this.zoominLimit) {\n                    matrix[0] = 'matrix(' + targetScale;\n                    matrix[3] = targetScale;\n                    this.transformVal = matrix.join(',');\n                }\n            }\n            else {\n                targetScale = Math.abs(parseFloat(matrix[5]) * newScale);\n                if (targetScale > this.zoomoutLimit && targetScale < this.zoominLimit) {\n                    matrix[0] = 'matrix3d(' + targetScale;\n                    matrix[5] = targetScale;\n                    this.transformVal = matrix.join(',');\n                }\n            }\n        }\n    }\n    zoomHandler(e) {\n        const newScale = 1 + (e.deltaY > 0 ? -0.2 : 0.2);\n        this.setChartScale(newScale);\n    }\n    onClickChart(e) {\n        if (!e.target.closest('.oc-node')) {\n            this.chartClick.emit();\n            this.nodeSelectService.clearSelect();\n        }\n    }\n    onNodeClick(nodeData) {\n        this.nodeClick.emit(nodeData);\n    }\n    /** @nocollapse */ static ɵfac = function ChartContainerComponent_Factory(t) { return new (t || ChartContainerComponent)(i0.ɵɵdirectiveInject(NodeSelectService)); };\n    /** @nocollapse */ static ɵcmp = /** @pureOrBreakMyCode */ i0.ɵɵdefineComponent({ type: ChartContainerComponent, selectors: [[\"organization-chart\"]], inputs: { datasource: \"datasource\", nodeHeading: \"nodeHeading\", nodeContent: \"nodeContent\", nodeTemplate: \"nodeTemplate\", groupScale: \"groupScale\", pan: \"pan\", zoom: \"zoom\", zoomoutLimit: \"zoomoutLimit\", zoominLimit: \"zoominLimit\", containerClass: \"containerClass\", chartClass: \"chartClass\", select: \"select\" }, outputs: { nodeClick: \"nodeClick\", chartClick: \"chartClick\" }, decls: 3, vars: 12, consts: [[1, \"orgchart-container\", 3, \"wheel\", \"mouseup\", \"ngClass\"], [1, \"orgchart\", 3, \"mousedown\", \"mousemove\", \"click\", \"ngClass\", \"ngStyle\"], [3, \"nodeClick\", \"datasource\", \"nodeHeading\", \"nodeContent\", \"nodeTemplate\", \"groupScale\", \"select\"]], template: function ChartContainerComponent_Template(rf, ctx) { if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0);\n            i0.ɵɵlistener(\"wheel\", function ChartContainerComponent_Template_div_wheel_0_listener($event) { return ctx.zoom ? ctx.zoomHandler($event) : true; })(\"mouseup\", function ChartContainerComponent_Template_div_mouseup_0_listener() { return ctx.pan && ctx.panning ? ctx.panEndHandler() : true; });\n            i0.ɵɵelementStart(1, \"div\", 1);\n            i0.ɵɵlistener(\"mousedown\", function ChartContainerComponent_Template_div_mousedown_1_listener($event) { return ctx.pan ? ctx.panStartHandler($event) : true; })(\"mousemove\", function ChartContainerComponent_Template_div_mousemove_1_listener($event) { return ctx.pan && ctx.panning ? ctx.panHandler($event) : true; })(\"click\", function ChartContainerComponent_Template_div_click_1_listener($event) { return ctx.onClickChart($event); });\n            i0.ɵɵelementStart(2, \"orgchart-node\", 2);\n            i0.ɵɵlistener(\"nodeClick\", function ChartContainerComponent_Template_orgchart_node_nodeClick_2_listener($event) { return ctx.onNodeClick($event); });\n            i0.ɵɵelementEnd()()();\n        } if (rf & 2) {\n            i0.ɵɵproperty(\"ngClass\", ctx.containerClass);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngClass\", ctx.chartClass)(\"ngStyle\", i0.ɵɵpureFunction2(9, _c0, ctx.transformVal, ctx.cursorVal));\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"datasource\", ctx.datasource)(\"nodeHeading\", ctx.nodeHeading)(\"nodeContent\", ctx.nodeContent)(\"nodeTemplate\", ctx.nodeTemplate)(\"groupScale\", ctx.groupScale)(\"select\", ctx.select);\n        } }, dependencies: [i2.NgClass, i2.NgStyle, ChartNodeComponent], styles: [\".orgchart-container[_ngcontent-%COMP%]{box-sizing:border-box;position:relative;margin:10px;height:700px;border:2px dashed #aaa;border-radius:5px;overflow:auto;text-align:center}.orgchart[_ngcontent-%COMP%]{box-sizing:border-box;display:inline-block;background-image:linear-gradient(90deg,#c8000026 10%,#0000 10%),linear-gradient(#c8000026 10%,#0000 10%);background-size:10px 10px;border:1px dashed rgba(0,0,0,0);padding:20px}\"] });\n}\n(() => { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ChartContainerComponent, [{\n        type: Component,\n        args: [{ selector: 'organization-chart', template: \"<div class=\\\"orgchart-container\\\" [ngClass]=\\\"containerClass\\\" (wheel)=\\\"zoom ? zoomHandler($event) : true\\\"\\r\\n\\t(mouseup)=\\\"pan && panning ? panEndHandler() : true\\\">\\r\\n\\t<div class=\\\"orgchart\\\" [ngClass]=\\\"chartClass\\\" [ngStyle]=\\\"{'transform': transformVal, 'cursor': cursorVal}\\\"\\r\\n\\t\\t(mousedown)=\\\"pan ? panStartHandler($event) : true\\\" (mousemove)=\\\"pan && panning ? panHandler($event) : true\\\"\\r\\n\\t\\t(click)=\\\"onClickChart($event)\\\">\\r\\n\\t\\t<orgchart-node [datasource]=\\\"datasource\\\" [nodeHeading]=\\\"nodeHeading\\\" [nodeContent]=\\\"nodeContent\\\"\\r\\n\\t\\t\\t[nodeTemplate]=\\\"nodeTemplate\\\" [groupScale]=\\\"groupScale\\\" [select]=\\\"select\\\" (nodeClick)=\\\"onNodeClick($event)\\\"></orgchart-node>\\r\\n\\t</div>\\r\\n</div>\", styles: [\".orgchart-container{box-sizing:border-box;position:relative;margin:10px;height:700px;border:2px dashed #aaa;border-radius:5px;overflow:auto;text-align:center}.orgchart{box-sizing:border-box;display:inline-block;background-image:linear-gradient(90deg,#c8000026 10%,#0000 10%),linear-gradient(#c8000026 10%,#0000 10%);background-size:10px 10px;border:1px dashed rgba(0,0,0,0);padding:20px}\\n\"] }]\n    }], () => [{ type: NodeSelectService }], { datasource: [{\n            type: Input\n        }], nodeHeading: [{\n            type: Input\n        }], nodeContent: [{\n            type: Input\n        }], nodeTemplate: [{\n            type: Input\n        }], groupScale: [{\n            type: Input\n        }], pan: [{\n            type: Input\n        }], zoom: [{\n            type: Input\n        }], zoomoutLimit: [{\n            type: Input\n        }], zoominLimit: [{\n            type: Input\n        }], containerClass: [{\n            type: Input\n        }], chartClass: [{\n            type: Input\n        }], select: [{\n            type: Input\n        }], nodeClick: [{\n            type: Output\n        }], chartClick: [{\n            type: Output\n        }] }); })();\n(() => { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassDebugInfo(ChartContainerComponent, { className: \"ChartContainerComponent\", filePath: \"lib\\\\components\\\\orgchart\\\\chart-container\\\\chart-container.component.ts\", lineNumber: 9 }); })();","originalLength":26362,"removedExports":[],"renderedExports":["ChartContainerComponent"],"renderedLength":10186},"C:\\Users\\cedric\\Desktop\\github\\ng-orgchart\\dist\\ng-orgchart\\esm2022\\lib\\components\\orgchart\\orgchart.module.mjs":{"code":"class OrgchartModule {\n    /** @nocollapse */ static ɵfac = function OrgchartModule_Factory(t) { return new (t || OrgchartModule)(); };\n    /** @nocollapse */ static ɵmod = /** @pureOrBreakMyCode */ i0.ɵɵdefineNgModule({ type: OrgchartModule });\n    /** @nocollapse */ static ɵinj = /** @pureOrBreakMyCode */ i0.ɵɵdefineInjector({ providers: [NodeSelectService], imports: [CommonModule,\n            BrowserAnimationsModule] });\n}\n(() => { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(OrgchartModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [ChartContainerComponent, ChartNodeComponent],\n                imports: [\n                    CommonModule,\n                    BrowserAnimationsModule\n                ],\n                exports: [ChartContainerComponent, ChartNodeComponent],\n                providers: [NodeSelectService],\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(OrgchartModule, { declarations: [ChartContainerComponent, ChartNodeComponent], imports: [CommonModule,\n        BrowserAnimationsModule], exports: [ChartContainerComponent, ChartNodeComponent] }); })();","originalLength":3814,"removedExports":[],"renderedExports":["OrgchartModule"],"renderedLength":1223},"C:\\Users\\cedric\\Desktop\\github\\ng-orgchart\\dist\\ng-orgchart\\esm2022\\public-api.mjs":{"code":"/*\n * Public API Surface of ng-orgchart\n */","originalLength":1017,"removedExports":[],"renderedExports":[],"renderedLength":43},"C:\\Users\\cedric\\Desktop\\github\\ng-orgchart\\dist\\ng-orgchart\\esm2022\\dabeng-ng-orgchart.mjs":{"code":"/**\n * Generated bundle index. Do not edit.\n */","originalLength":516,"removedExports":[],"renderedExports":[],"renderedLength":47}},"referencedFiles":[],"code":"import * as i0 from '@angular/core';\nimport { Injectable, EventEmitter, Component, Input, Output, NgModule } from '@angular/core';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { Subject } from 'rxjs';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\n\nclass NodeSelectService {\n    subject = new Subject();\n    constructor() { }\n    sendSelect(id) {\n        this.subject.next({ id });\n    }\n    clearSelect() {\n        this.subject.next(null);\n    }\n    getSelect() {\n        return this.subject.asObservable();\n    }\n    /** @nocollapse */ static ɵfac = function NodeSelectService_Factory(t) { return new (t || NodeSelectService)(); };\n    /** @nocollapse */ static ɵprov = /** @pureOrBreakMyCode */ i0.ɵɵdefineInjectable({ token: NodeSelectService, factory: NodeSelectService.ɵfac });\n}\n(() => { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NodeSelectService, [{\n        type: Injectable\n    }], () => [], null); })();\n\nclass Node {\n    id;\n    name;\n    title;\n    children;\n}\n\nconst _c0$1 = (a0, a1, a2) => ({ datasource: a0, nodeHeading: a1, nodeContent: a2 });\nconst _c1 = (a0, a1) => ({ \"oc-icon-plus\": a0, \"oc-icon-minus\": a1 });\nfunction ChartNodeComponent_ng_container_1_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n} }\nfunction ChartNodeComponent_i_2_Template(rf, ctx) { if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"i\", 5);\n    i0.ɵɵlistener(\"click\", function ChartNodeComponent_i_2_Template_i_click_0_listener() { i0.ɵɵrestoreView(_r2); const ctx_r2 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r2.toggleChildren()); });\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(1, _c1, ctx_r2.isCollapsed, !ctx_r2.isCollapsed));\n} }\nfunction ChartNodeComponent_div_3_ng_container_1_div_1_ng_container_1_orgchart_node_1_Template(rf, ctx) { if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"orgchart-node\", 11);\n    i0.ɵɵlistener(\"nodeClick\", function ChartNodeComponent_div_3_ng_container_1_div_1_ng_container_1_orgchart_node_1_Template_orgchart_node_nodeClick_0_listener($event) { i0.ɵɵrestoreView(_r5); const ctx_r2 = i0.ɵɵnextContext(5); return i0.ɵɵresetView(ctx_r2.onNodeClick($event)); });\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const j_r6 = i0.ɵɵnextContext().index;\n    const i_r7 = i0.ɵɵnextContext(2).index;\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"datasource\", ctx_r2.datasource.children[i_r7 + j_r6])(\"nodeHeading\", ctx_r2.nodeHeading)(\"nodeContent\", ctx_r2.nodeContent)(\"nodeTemplate\", ctx_r2.nodeTemplate)(\"groupScale\", ctx_r2.groupScale)(\"select\", ctx_r2.select);\n} }\nfunction ChartNodeComponent_div_3_ng_container_1_div_1_ng_container_1_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, ChartNodeComponent_div_3_ng_container_1_div_1_ng_container_1_orgchart_node_1_Template, 1, 6, \"orgchart-node\", 10);\n    i0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const j_r6 = ctx.index;\n    const i_r7 = i0.ɵɵnextContext(2).index;\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", i_r7 + j_r6 < ctx_r2.datasource.children.length);\n} }\nfunction ChartNodeComponent_div_3_ng_container_1_div_1_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵtemplate(1, ChartNodeComponent_div_3_ng_container_1_div_1_ng_container_1_Template, 2, 1, \"ng-container\", 7);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.Arr(ctx_r2.groupScale));\n} }\nfunction ChartNodeComponent_div_3_ng_container_1_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, ChartNodeComponent_div_3_ng_container_1_div_1_Template, 2, 1, \"div\", 8);\n    i0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const i_r7 = ctx.index;\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", i_r7 % ctx_r2.groupScale === 0);\n} }\nfunction ChartNodeComponent_div_3_Template(rf, ctx) { if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 6);\n    i0.ɵɵlistener(\"@expandCollapse.start\", function ChartNodeComponent_div_3_Template_div_animation_expandCollapse_start_0_listener($event) { i0.ɵɵrestoreView(_r4); const ctx_r2 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r2.toggleAnimStart($event)); })(\"@expandCollapse.done\", function ChartNodeComponent_div_3_Template_div_animation_expandCollapse_done_0_listener($event) { i0.ɵɵrestoreView(_r4); const ctx_r2 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r2.toggleAnimEnd($event)); });\n    i0.ɵɵtemplate(1, ChartNodeComponent_div_3_ng_container_1_Template, 2, 1, \"ng-container\", 7);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"@expandCollapse\", ctx_r2.isCollapsed ? \"collapsed\" : \"expanded\")(\"ngStyle\", ctx_r2.ecStyles);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.datasource.children);\n} }\nfunction ChartNodeComponent_ng_template_4_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"div\", 13);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const nodeData_r8 = ctx.datasource;\n    const heading_r9 = ctx.nodeHeading;\n    const content_r10 = ctx.nodeContent;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(nodeData_r8[heading_r9]);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(nodeData_r8[content_r10]);\n} }\nclass ChartNodeComponent {\n    nodeSelectService;\n    datasource;\n    nodeHeading;\n    nodeContent;\n    nodeTemplate;\n    groupScale;\n    select;\n    nodeClick = new EventEmitter();\n    Arr = Array; // Array type captured in a variable\n    isCollapsed = false;\n    ecStyles;\n    isSelected;\n    subscription;\n    constructor(nodeSelectService) {\n        this.nodeSelectService = nodeSelectService;\n        // subscribe to node selection status\n        this.subscription = this.nodeSelectService.getSelect().subscribe(selection => {\n            if (selection && selection.id) {\n                this.isSelected = this.datasource.id === selection.id;\n            }\n            else { // clear selection when empty selection received\n                this.isSelected = false;\n            }\n        });\n    }\n    ngOnDestroy() {\n        // unsubscribe to ensure no memory leaks\n        this.subscription.unsubscribe();\n    }\n    ngOnInit() {\n    }\n    toggleChildren() {\n        this.isCollapsed = !this.isCollapsed;\n    }\n    toggleAnimStart(event) {\n        if (this.isCollapsed) {\n            // 如果折叠的是根结点的子节点，那么根结点向下的连接线需要隐藏\n            if (event.element.parentElement &&\n                event.element.parentElement.parentElement &&\n                event.element.parentElement.parentElement.classList.contains('orgchart')) {\n                event.element.previousElementSibling.classList.add('oc-is-collapsed');\n            }\n        }\n        else { // 刚一展开的时候，需要马上把子节点们显示出来，以便看到“下滑”效果\n            this.ecStyles = {\n                display: 'flex'\n            };\n        }\n    }\n    toggleAnimEnd(event) {\n        if (this.isCollapsed) { // 折叠时，“上滑”动画结束后，需要将子节点们隐藏，以便其不占用空间\n            this.ecStyles = {\n                display: 'none'\n            };\n        }\n        else {\n            // 如果展开的是根结点的子节点，那么根结点向下的连接线需要显示\n            if (event.element.parentElement &&\n                event.element.parentElement.parentElement &&\n                event.element.parentElement.parentElement.classList.contains('orgchart')) {\n                event.element.previousElementSibling.classList.remove('oc-is-collapsed');\n            }\n        }\n    }\n    onClickNode(e) {\n        this.nodeClick.emit(this.datasource);\n        if (this.select === 'single') {\n            this.nodeSelectService.sendSelect(this.datasource.id);\n        }\n        else if (this.select === 'multiple') {\n            this.isSelected = !this.isSelected;\n        }\n    }\n    onNodeClick(e) {\n        this.nodeClick.emit(e);\n    }\n    /** @nocollapse */ static ɵfac = function ChartNodeComponent_Factory(t) { return new (t || ChartNodeComponent)(i0.ɵɵdirectiveInject(NodeSelectService)); };\n    /** @nocollapse */ static ɵcmp = /** @pureOrBreakMyCode */ i0.ɵɵdefineComponent({ type: ChartNodeComponent, selectors: [[\"orgchart-node\"]], inputs: { datasource: \"datasource\", nodeHeading: \"nodeHeading\", nodeContent: \"nodeContent\", nodeTemplate: \"nodeTemplate\", groupScale: \"groupScale\", select: \"select\" }, outputs: { nodeClick: \"nodeClick\" }, decls: 6, vars: 11, consts: [[\"defaultNodeTemplate\", \"\"], [1, \"oc-node\", 3, \"click\", \"id\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [\"class\", \"oc-toggle-btn oc-icon\", 3, \"ngClass\", \"click\", 4, \"ngIf\"], [\"class\", \"oc-groups\", 3, \"ngStyle\", 4, \"ngIf\"], [1, \"oc-toggle-btn\", \"oc-icon\", 3, \"click\", \"ngClass\"], [1, \"oc-groups\", 3, \"ngStyle\"], [4, \"ngFor\", \"ngForOf\"], [\"class\", \"oc-group\", 4, \"ngIf\"], [1, \"oc-group\"], [3, \"datasource\", \"nodeHeading\", \"nodeContent\", \"nodeTemplate\", \"groupScale\", \"select\", \"nodeClick\", 4, \"ngIf\"], [3, \"nodeClick\", \"datasource\", \"nodeHeading\", \"nodeContent\", \"nodeTemplate\", \"groupScale\", \"select\"], [1, \"oc-node-heading\"], [1, \"oc-node-content\"]], template: function ChartNodeComponent_Template(rf, ctx) { if (rf & 1) {\n            const _r1 = i0.ɵɵgetCurrentView();\n            i0.ɵɵelementStart(0, \"div\", 1);\n            i0.ɵɵlistener(\"click\", function ChartNodeComponent_Template_div_click_0_listener($event) { i0.ɵɵrestoreView(_r1); return i0.ɵɵresetView(ctx.onClickNode($event)); });\n            i0.ɵɵtemplate(1, ChartNodeComponent_ng_container_1_Template, 1, 0, \"ng-container\", 2)(2, ChartNodeComponent_i_2_Template, 1, 4, \"i\", 3);\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(3, ChartNodeComponent_div_3_Template, 2, 3, \"div\", 4)(4, ChartNodeComponent_ng_template_4_Template, 4, 2, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n        } if (rf & 2) {\n            const defaultNodeTemplate_r11 = i0.ɵɵreference(5);\n            i0.ɵɵclassProp(\"oc-is-selected\", ctx.isSelected);\n            i0.ɵɵproperty(\"id\", ctx.datasource.id);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngTemplateOutlet\", ctx.nodeTemplate ? ctx.nodeTemplate : defaultNodeTemplate_r11)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction3(7, _c0$1, ctx.datasource, ctx.nodeHeading, ctx.nodeContent));\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.datasource.children);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.datasource.children);\n        } }, dependencies: [i2.NgClass, i2.NgForOf, i2.NgIf, i2.NgTemplateOutlet, i2.NgStyle, ChartNodeComponent], styles: [\".oc-groups[_ngcontent-%COMP%]{display:flex;flex-direction:row}.orgchart > [_nghost-%COMP%]{align-items:center}.orgchart > [_nghost-%COMP%] > .oc-node[_ngcontent-%COMP%]:after{content:\\\"\\\";box-sizing:border-box;bottom:-10px;left:50%;height:10px;width:2px;position:absolute;background-color:#d9534fcc}.orgchart > [_nghost-%COMP%] > .oc-node.oc-is-collapsed[_ngcontent-%COMP%]:after{display:none}.orgchart > [_nghost-%COMP%] > .oc-groups[_ngcontent-%COMP%] > .oc-group[_ngcontent-%COMP%] > [_ngcontent-%COMP%]:before{height:35px;top:-10px}.oc-node[_ngcontent-%COMP%]{width:140px;font-family:Arial;box-sizing:border-box;position:relative;padding:3px;margin:0;border:2px solid transparent;text-align:center}.oc-node[_ngcontent-%COMP%]:hover, .oc-node.oc-is-selected[_ngcontent-%COMP%]{background-color:#eed93680}.oc-node[_ngcontent-%COMP%]   .oc-node-heading[_ngcontent-%COMP%]{box-sizing:border-box;padding:2px;margin:0;width:130px;height:20px;text-align:center;font-size:.75rem;font-weight:700;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;background-color:#d9534fcc;color:#fff;border-radius:4px 4px 0 0}.oc-node[_ngcontent-%COMP%]   .oc-node-content[_ngcontent-%COMP%]{box-sizing:border-box;padding:2px;width:130px;height:20px;font-size:.625rem;border:1px solid rgba(217,83,79,.8);border-radius:0 0 4px 4px;text-align:center;background-color:#fff;color:#333;text-overflow:ellipsis;white-space:nowrap}.oc-node[_ngcontent-%COMP%]   .oc-toggle-btn[_ngcontent-%COMP%]{color:#fff;background-color:#449d4499;position:absolute;left:5px;bottom:5px}.oc-group[_ngcontent-%COMP%]{display:flex;flex-direction:column;padding-left:20px;position:relative;padding-top:20px}.orgchart > [_nghost-%COMP%] > .oc-groups[_ngcontent-%COMP%] > .oc-group[_ngcontent-%COMP%]:first-child{padding-left:10px}.oc-group[_ngcontent-%COMP%]:not(:last-child):before{content:\\\"\\\";box-sizing:border-box;top:10px;left:12px;width:calc(100% - 2px);position:absolute;border-color:#d9534fcc;border-style:solid;border-width:0 0 2px 0}.orgchart > [_nghost-%COMP%] > .oc-groups[_ngcontent-%COMP%] > .oc-group[_ngcontent-%COMP%]:first-child:before{width:calc(100% + 8px);left:2px}[_nghost-%COMP%]{position:relative;display:flex;flex-direction:column}[_nghost-%COMP%]:not(:last-child){padding-bottom:10px}.oc-group > [_nghost-%COMP%]:before{content:\\\"\\\";box-sizing:border-box;height:35px;width:10px;position:absolute;left:-10px;top:-10px;border-color:#d9534fcc;border-style:solid;border-width:0 0 2px 2px}.oc-group:first-child > [_nghost-%COMP%]:first-child:before{height:45px;top:-20px}[_nghost-%COMP%]:not(:last-child):after{content:\\\"\\\";box-sizing:border-box;height:calc(100% - 35px);width:10px;position:absolute;left:-10px;top:25px;border-color:#d9534fcc;border-style:solid;border-width:0 0 0 2px}.oc-icon[_ngcontent-%COMP%]{display:inline-block;width:1rem;height:1rem;line-height:1rem;text-align:center}.oc-icon-minus[_ngcontent-%COMP%]:before{content:\\\"\\\\2212\\\"}.oc-icon-plus[_ngcontent-%COMP%]:before{content:\\\"+\\\"}\"], data: { animation: [\n                trigger('expandCollapse', [\n                    state('expanded', style({\n                        transform: 'translateY(0)',\n                        opacity: 1\n                    })),\n                    state('collapsed', style({\n                        transform: 'translateY(-50px)',\n                        opacity: 0\n                    })),\n                    transition('expanded => collapsed', [animate('0.2s')]),\n                    transition('collapsed => expanded', [animate('0.2s')])\n                ])\n            ] } });\n}\n(() => { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ChartNodeComponent, [{\n        type: Component,\n        args: [{ selector: 'orgchart-node', animations: [\n                    trigger('expandCollapse', [\n                        state('expanded', style({\n                            transform: 'translateY(0)',\n                            opacity: 1\n                        })),\n                        state('collapsed', style({\n                            transform: 'translateY(-50px)',\n                            opacity: 0\n                        })),\n                        transition('expanded => collapsed', [animate('0.2s')]),\n                        transition('collapsed => expanded', [animate('0.2s')])\n                    ])\n                ], template: \"<div class=\\\"oc-node\\\" [id]=\\\"datasource.id\\\" [class.oc-is-selected]=\\\"isSelected\\\" (click)=\\\"onClickNode($event)\\\">\\r\\n\\t<ng-container\\r\\n\\t\\t*ngTemplateOutlet=\\\"nodeTemplate ? nodeTemplate : defaultNodeTemplate; context:{ datasource:datasource,nodeHeading: nodeHeading, nodeContent: nodeContent }\\\">\\r\\n\\t</ng-container>\\r\\n\\t<i *ngIf=\\\"datasource.children\\\" [ngClass]=\\\"{'oc-icon-plus': isCollapsed, 'oc-icon-minus': !isCollapsed}\\\" (click)=\\\"toggleChildren()\\\" class=\\\"oc-toggle-btn oc-icon\\\"></i>\\r\\n</div>\\r\\n<div *ngIf=\\\"datasource.children\\\" [@expandCollapse]=\\\"isCollapsed ? 'collapsed' : 'expanded'\\\"\\r\\n\\t(@expandCollapse.start)=\\\"toggleAnimStart($event)\\\" (@expandCollapse.done)=\\\"toggleAnimEnd($event)\\\"\\r\\n\\t[ngStyle]=\\\"ecStyles\\\" class=\\\"oc-groups\\\">\\r\\n\\t<ng-container *ngFor=\\\"let node of datasource.children;let i=index\\\">\\r\\n\\t\\t<div *ngIf=\\\"i % groupScale === 0\\\" class=\\\"oc-group\\\">\\r\\n\\t\\t\\t<ng-container *ngFor=\\\"let temp of Arr(groupScale);let j=index;\\\">\\r\\n\\t\\t\\t\\t<orgchart-node *ngIf=\\\"i + j < datasource.children.length\\\" [datasource]=\\\"datasource.children[i + j]\\\"\\r\\n\\t\\t\\t\\t\\t[nodeHeading]=\\\"nodeHeading\\\" [nodeContent]=\\\"nodeContent\\\" [nodeTemplate]=\\\"nodeTemplate\\\"\\r\\n\\t\\t\\t\\t\\t[groupScale]=\\\"groupScale\\\" [select]=\\\"select\\\" (nodeClick)=\\\"onNodeClick($event)\\\">\\r\\n\\t\\t\\t\\t</orgchart-node>\\r\\n\\t\\t\\t</ng-container>\\r\\n\\t\\t</div>\\r\\n\\t</ng-container>\\r\\n</div>\\r\\n\\r\\n<ng-template #defaultNodeTemplate let-nodeData=\\\"datasource\\\" let-heading=\\\"nodeHeading\\\" let-content=\\\"nodeContent\\\">\\r\\n\\t<div class=\\\"oc-node-heading\\\">{{nodeData[heading]}}</div>\\r\\n\\t<div class=\\\"oc-node-content\\\">{{nodeData[content]}}</div>\\r\\n</ng-template>\", styles: [\".oc-groups{display:flex;flex-direction:row}.orgchart>:host{align-items:center}.orgchart>:host>.oc-node:after{content:\\\"\\\";box-sizing:border-box;bottom:-10px;left:50%;height:10px;width:2px;position:absolute;background-color:#d9534fcc}.orgchart>:host>.oc-node.oc-is-collapsed:after{display:none}.orgchart>:host>.oc-groups>.oc-group>:host:before{height:35px;top:-10px}.oc-node{width:140px;font-family:Arial;box-sizing:border-box;position:relative;padding:3px;margin:0;border:2px solid transparent;text-align:center}.oc-node:hover,.oc-node.oc-is-selected{background-color:#eed93680}.oc-node .oc-node-heading{box-sizing:border-box;padding:2px;margin:0;width:130px;height:20px;text-align:center;font-size:.75rem;font-weight:700;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;background-color:#d9534fcc;color:#fff;border-radius:4px 4px 0 0}.oc-node .oc-node-content{box-sizing:border-box;padding:2px;width:130px;height:20px;font-size:.625rem;border:1px solid rgba(217,83,79,.8);border-radius:0 0 4px 4px;text-align:center;background-color:#fff;color:#333;text-overflow:ellipsis;white-space:nowrap}.oc-node .oc-toggle-btn{color:#fff;background-color:#449d4499;position:absolute;left:5px;bottom:5px}.oc-group{display:flex;flex-direction:column;padding-left:20px;position:relative;padding-top:20px}.orgchart>:host>.oc-groups>.oc-group:first-child{padding-left:10px}.oc-group:not(:last-child):before{content:\\\"\\\";box-sizing:border-box;top:10px;left:12px;width:calc(100% - 2px);position:absolute;border-color:#d9534fcc;border-style:solid;border-width:0 0 2px 0}.orgchart>:host>.oc-groups>.oc-group:first-child:before{width:calc(100% + 8px);left:2px}:host{position:relative;display:flex;flex-direction:column}:host:not(:last-child){padding-bottom:10px}.oc-group>:host:before{content:\\\"\\\";box-sizing:border-box;height:35px;width:10px;position:absolute;left:-10px;top:-10px;border-color:#d9534fcc;border-style:solid;border-width:0 0 2px 2px}.oc-group:first-child>:host:first-child:before{height:45px;top:-20px}:host:not(:last-child):after{content:\\\"\\\";box-sizing:border-box;height:calc(100% - 35px);width:10px;position:absolute;left:-10px;top:25px;border-color:#d9534fcc;border-style:solid;border-width:0 0 0 2px}.oc-icon{display:inline-block;width:1rem;height:1rem;line-height:1rem;text-align:center}.oc-icon-minus:before{content:\\\"\\\\2212\\\"}.oc-icon-plus:before{content:\\\"+\\\"}\\n\"] }]\n    }], () => [{ type: NodeSelectService }], { datasource: [{\n            type: Input\n        }], nodeHeading: [{\n            type: Input\n        }], nodeContent: [{\n            type: Input\n        }], nodeTemplate: [{\n            type: Input\n        }], groupScale: [{\n            type: Input\n        }], select: [{\n            type: Input\n        }], nodeClick: [{\n            type: Output\n        }] }); })();\n(() => { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassDebugInfo(ChartNodeComponent, { className: \"ChartNodeComponent\", filePath: \"lib\\\\components\\\\orgchart\\\\chart-node\\\\chart-node.component.ts\", lineNumber: 38 }); })();\n\nconst _c0 = (a0, a1) => ({ \"transform\": a0, \"cursor\": a1 });\nclass ChartContainerComponent {\n    nodeSelectService;\n    datasource;\n    nodeHeading = 'name';\n    nodeContent = 'title';\n    nodeTemplate;\n    groupScale = 3;\n    pan = false;\n    zoom = false;\n    zoomoutLimit = 0.5;\n    zoominLimit = 7;\n    containerClass = '';\n    chartClass = '';\n    select = 'single';\n    nodeClick = new EventEmitter();\n    chartClick = new EventEmitter();\n    cursorVal = 'default';\n    panning = false;\n    startX = 0;\n    startY = 0;\n    transformVal = '';\n    constructor(nodeSelectService) {\n        this.nodeSelectService = nodeSelectService;\n    }\n    ngOnInit() {\n    }\n    panEndHandler() {\n        this.panning = false;\n        this.cursorVal = 'default';\n    }\n    panHandler(e) {\n        let newX = 0;\n        let newY = 0;\n        if (!e.targetTouches) {\n            // pand on desktop\n            newX = e.pageX - this.startX;\n            newY = e.pageY - this.startY;\n        }\n        else if (e.targetTouches.length === 1) {\n            // pan on mobile device\n            newX = e.targetTouches[0].pageX - this.startX;\n            newY = e.targetTouches[0].pageY - this.startY;\n        }\n        else if (e.targetTouches.length > 1) {\n            return;\n        }\n        if (this.transformVal === '') {\n            if (this.transformVal.indexOf('3d') === -1) {\n                this.transformVal = 'matrix(1,0,0,1,' + newX + ',' + newY + ')';\n            }\n            else {\n                this.transformVal =\n                    'matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,' + newX + ', ' + newY + ',0,1)';\n            }\n        }\n        else {\n            const matrix = this.transformVal.split(',');\n            if (this.transformVal.indexOf('3d') === -1) {\n                matrix[4] = newX.toString();\n                matrix[5] = newY + ')';\n            }\n            else {\n                matrix[12] = newX.toString();\n                matrix[13] = newY.toString();\n            }\n            this.transformVal = matrix.join(',');\n        }\n    }\n    panStartHandler(e) {\n        if (e.target.querySelectorAll('.node') && e.target.querySelectorAll('.node').length) {\n            this.panning = false;\n            return;\n        }\n        else {\n            this.cursorVal = 'move';\n            this.panning = true;\n        }\n        let lastX = 0;\n        let lastY = 0;\n        if (this.transformVal !== '') {\n            const matrix = this.transformVal.split(',');\n            if (this.transformVal.indexOf('3d') === -1) {\n                lastX = parseInt(matrix[4], 10);\n                lastY = parseInt(matrix[5], 10);\n            }\n            else {\n                lastX = parseInt(matrix[12], 10);\n                lastY = parseInt(matrix[13], 10);\n            }\n        }\n        if (!e.targetTouches) {\n            // pand on desktop\n            this.startX = e.pageX - lastX;\n            this.startY = e.pageY - lastY;\n        }\n        else if (e.targetTouches.length === 1) {\n            // pan on mobile device\n            this.startX = e.targetTouches[0].pageX - lastX;\n            this.startY = e.targetTouches[0].pageY - lastY;\n        }\n        else if (e.targetTouches.length > 1) {\n            return;\n        }\n    }\n    setChartScale(newScale) {\n        let matrix = [];\n        let targetScale = 1;\n        if (this.transformVal === '') {\n            this.transformVal =\n                'matrix(' + newScale + ', 0, 0, ' + newScale + ', 0, 0)';\n        }\n        else {\n            matrix = this.transformVal.split(',');\n            if (this.transformVal.indexOf('3d') === -1) {\n                targetScale = Math.abs(parseFloat(matrix[3]) * newScale);\n                if (targetScale > this.zoomoutLimit && targetScale < this.zoominLimit) {\n                    matrix[0] = 'matrix(' + targetScale;\n                    matrix[3] = targetScale;\n                    this.transformVal = matrix.join(',');\n                }\n            }\n            else {\n                targetScale = Math.abs(parseFloat(matrix[5]) * newScale);\n                if (targetScale > this.zoomoutLimit && targetScale < this.zoominLimit) {\n                    matrix[0] = 'matrix3d(' + targetScale;\n                    matrix[5] = targetScale;\n                    this.transformVal = matrix.join(',');\n                }\n            }\n        }\n    }\n    zoomHandler(e) {\n        const newScale = 1 + (e.deltaY > 0 ? -0.2 : 0.2);\n        this.setChartScale(newScale);\n    }\n    onClickChart(e) {\n        if (!e.target.closest('.oc-node')) {\n            this.chartClick.emit();\n            this.nodeSelectService.clearSelect();\n        }\n    }\n    onNodeClick(nodeData) {\n        this.nodeClick.emit(nodeData);\n    }\n    /** @nocollapse */ static ɵfac = function ChartContainerComponent_Factory(t) { return new (t || ChartContainerComponent)(i0.ɵɵdirectiveInject(NodeSelectService)); };\n    /** @nocollapse */ static ɵcmp = /** @pureOrBreakMyCode */ i0.ɵɵdefineComponent({ type: ChartContainerComponent, selectors: [[\"organization-chart\"]], inputs: { datasource: \"datasource\", nodeHeading: \"nodeHeading\", nodeContent: \"nodeContent\", nodeTemplate: \"nodeTemplate\", groupScale: \"groupScale\", pan: \"pan\", zoom: \"zoom\", zoomoutLimit: \"zoomoutLimit\", zoominLimit: \"zoominLimit\", containerClass: \"containerClass\", chartClass: \"chartClass\", select: \"select\" }, outputs: { nodeClick: \"nodeClick\", chartClick: \"chartClick\" }, decls: 3, vars: 12, consts: [[1, \"orgchart-container\", 3, \"wheel\", \"mouseup\", \"ngClass\"], [1, \"orgchart\", 3, \"mousedown\", \"mousemove\", \"click\", \"ngClass\", \"ngStyle\"], [3, \"nodeClick\", \"datasource\", \"nodeHeading\", \"nodeContent\", \"nodeTemplate\", \"groupScale\", \"select\"]], template: function ChartContainerComponent_Template(rf, ctx) { if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0);\n            i0.ɵɵlistener(\"wheel\", function ChartContainerComponent_Template_div_wheel_0_listener($event) { return ctx.zoom ? ctx.zoomHandler($event) : true; })(\"mouseup\", function ChartContainerComponent_Template_div_mouseup_0_listener() { return ctx.pan && ctx.panning ? ctx.panEndHandler() : true; });\n            i0.ɵɵelementStart(1, \"div\", 1);\n            i0.ɵɵlistener(\"mousedown\", function ChartContainerComponent_Template_div_mousedown_1_listener($event) { return ctx.pan ? ctx.panStartHandler($event) : true; })(\"mousemove\", function ChartContainerComponent_Template_div_mousemove_1_listener($event) { return ctx.pan && ctx.panning ? ctx.panHandler($event) : true; })(\"click\", function ChartContainerComponent_Template_div_click_1_listener($event) { return ctx.onClickChart($event); });\n            i0.ɵɵelementStart(2, \"orgchart-node\", 2);\n            i0.ɵɵlistener(\"nodeClick\", function ChartContainerComponent_Template_orgchart_node_nodeClick_2_listener($event) { return ctx.onNodeClick($event); });\n            i0.ɵɵelementEnd()()();\n        } if (rf & 2) {\n            i0.ɵɵproperty(\"ngClass\", ctx.containerClass);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngClass\", ctx.chartClass)(\"ngStyle\", i0.ɵɵpureFunction2(9, _c0, ctx.transformVal, ctx.cursorVal));\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"datasource\", ctx.datasource)(\"nodeHeading\", ctx.nodeHeading)(\"nodeContent\", ctx.nodeContent)(\"nodeTemplate\", ctx.nodeTemplate)(\"groupScale\", ctx.groupScale)(\"select\", ctx.select);\n        } }, dependencies: [i2.NgClass, i2.NgStyle, ChartNodeComponent], styles: [\".orgchart-container[_ngcontent-%COMP%]{box-sizing:border-box;position:relative;margin:10px;height:700px;border:2px dashed #aaa;border-radius:5px;overflow:auto;text-align:center}.orgchart[_ngcontent-%COMP%]{box-sizing:border-box;display:inline-block;background-image:linear-gradient(90deg,#c8000026 10%,#0000 10%),linear-gradient(#c8000026 10%,#0000 10%);background-size:10px 10px;border:1px dashed rgba(0,0,0,0);padding:20px}\"] });\n}\n(() => { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ChartContainerComponent, [{\n        type: Component,\n        args: [{ selector: 'organization-chart', template: \"<div class=\\\"orgchart-container\\\" [ngClass]=\\\"containerClass\\\" (wheel)=\\\"zoom ? zoomHandler($event) : true\\\"\\r\\n\\t(mouseup)=\\\"pan && panning ? panEndHandler() : true\\\">\\r\\n\\t<div class=\\\"orgchart\\\" [ngClass]=\\\"chartClass\\\" [ngStyle]=\\\"{'transform': transformVal, 'cursor': cursorVal}\\\"\\r\\n\\t\\t(mousedown)=\\\"pan ? panStartHandler($event) : true\\\" (mousemove)=\\\"pan && panning ? panHandler($event) : true\\\"\\r\\n\\t\\t(click)=\\\"onClickChart($event)\\\">\\r\\n\\t\\t<orgchart-node [datasource]=\\\"datasource\\\" [nodeHeading]=\\\"nodeHeading\\\" [nodeContent]=\\\"nodeContent\\\"\\r\\n\\t\\t\\t[nodeTemplate]=\\\"nodeTemplate\\\" [groupScale]=\\\"groupScale\\\" [select]=\\\"select\\\" (nodeClick)=\\\"onNodeClick($event)\\\"></orgchart-node>\\r\\n\\t</div>\\r\\n</div>\", styles: [\".orgchart-container{box-sizing:border-box;position:relative;margin:10px;height:700px;border:2px dashed #aaa;border-radius:5px;overflow:auto;text-align:center}.orgchart{box-sizing:border-box;display:inline-block;background-image:linear-gradient(90deg,#c8000026 10%,#0000 10%),linear-gradient(#c8000026 10%,#0000 10%);background-size:10px 10px;border:1px dashed rgba(0,0,0,0);padding:20px}\\n\"] }]\n    }], () => [{ type: NodeSelectService }], { datasource: [{\n            type: Input\n        }], nodeHeading: [{\n            type: Input\n        }], nodeContent: [{\n            type: Input\n        }], nodeTemplate: [{\n            type: Input\n        }], groupScale: [{\n            type: Input\n        }], pan: [{\n            type: Input\n        }], zoom: [{\n            type: Input\n        }], zoomoutLimit: [{\n            type: Input\n        }], zoominLimit: [{\n            type: Input\n        }], containerClass: [{\n            type: Input\n        }], chartClass: [{\n            type: Input\n        }], select: [{\n            type: Input\n        }], nodeClick: [{\n            type: Output\n        }], chartClick: [{\n            type: Output\n        }] }); })();\n(() => { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassDebugInfo(ChartContainerComponent, { className: \"ChartContainerComponent\", filePath: \"lib\\\\components\\\\orgchart\\\\chart-container\\\\chart-container.component.ts\", lineNumber: 9 }); })();\n\nclass OrgchartModule {\n    /** @nocollapse */ static ɵfac = function OrgchartModule_Factory(t) { return new (t || OrgchartModule)(); };\n    /** @nocollapse */ static ɵmod = /** @pureOrBreakMyCode */ i0.ɵɵdefineNgModule({ type: OrgchartModule });\n    /** @nocollapse */ static ɵinj = /** @pureOrBreakMyCode */ i0.ɵɵdefineInjector({ providers: [NodeSelectService], imports: [CommonModule,\n            BrowserAnimationsModule] });\n}\n(() => { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(OrgchartModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [ChartContainerComponent, ChartNodeComponent],\n                imports: [\n                    CommonModule,\n                    BrowserAnimationsModule\n                ],\n                exports: [ChartContainerComponent, ChartNodeComponent],\n                providers: [NodeSelectService],\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(OrgchartModule, { declarations: [ChartContainerComponent, ChartNodeComponent], imports: [CommonModule,\n        BrowserAnimationsModule], exports: [ChartContainerComponent, ChartNodeComponent] }); })();\n\n/*\n * Public API Surface of ng-orgchart\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ChartContainerComponent, ChartNodeComponent, OrgchartModule };\n//# sourceMappingURL=dabeng-ng-orgchart.mjs.map\n","map":null,"preliminaryFileName":"dabeng-ng-orgchart.mjs","sourcemapFileName":"dabeng-ng-orgchart.mjs.map"},{"fileName":"dabeng-ng-orgchart.mjs.map","names":[],"needsCodeReference":false,"originalFileName":null,"originalFileNames":[],"source":"{\"version\":3,\"file\":\"dabeng-ng-orgchart.mjs\",\"sources\":[\"../../../projects/ng-orgchart/src/lib/components/orgchart/shared/services/node-select.service.ts\",\"../../../projects/ng-orgchart/src/lib/components/orgchart/shared/models/node.model.ts\",\"../../../projects/ng-orgchart/src/lib/components/orgchart/chart-node/chart-node.component.html\",\"../../../projects/ng-orgchart/src/lib/components/orgchart/chart-node/chart-node.component.ts\",\"../../../projects/ng-orgchart/src/lib/components/orgchart/chart-container/chart-container.component.ts\",\"../../../projects/ng-orgchart/src/lib/components/orgchart/chart-container/chart-container.component.html\",\"../../../projects/ng-orgchart/src/lib/components/orgchart/orgchart.module.ts\",\"../../../projects/ng-orgchart/src/public-api.ts\",\"../../../projects/ng-orgchart/src/dabeng-ng-orgchart.ts\"],\"sourcesContent\":[\"import { Injectable } from '@angular/core';\\r\\nimport { Observable, Subject } from 'rxjs';\\r\\n\\r\\n@Injectable()\\r\\nexport class NodeSelectService {\\r\\n\\r\\n  private subject = new Subject<any>();\\r\\n\\r\\n  constructor() { }\\r\\n\\r\\n  sendSelect(id: string) {\\r\\n    this.subject.next({ id });\\r\\n  }\\r\\n\\r\\n  clearSelect() {\\r\\n    this.subject.next(null);\\r\\n  }\\r\\n\\r\\n  getSelect(): Observable<any> {\\r\\n    return this.subject.asObservable();\\r\\n  }\\r\\n\\r\\n}\\r\\n\",\"export class Node {\\r\\n  id: string;\\r\\n  name: string;\\r\\n  title: string;\\r\\n  children?: Node[];\\r\\n}\",\"<div class=\\\"oc-node\\\" [id]=\\\"datasource.id\\\" [class.oc-is-selected]=\\\"isSelected\\\" (click)=\\\"onClickNode($event)\\\">\\r\\n\\t<ng-container\\r\\n\\t\\t*ngTemplateOutlet=\\\"nodeTemplate ? nodeTemplate : defaultNodeTemplate; context:{ datasource:datasource,nodeHeading: nodeHeading, nodeContent: nodeContent }\\\">\\r\\n\\t</ng-container>\\r\\n\\t<i *ngIf=\\\"datasource.children\\\" [ngClass]=\\\"{'oc-icon-plus': isCollapsed, 'oc-icon-minus': !isCollapsed}\\\" (click)=\\\"toggleChildren()\\\" class=\\\"oc-toggle-btn oc-icon\\\"></i>\\r\\n</div>\\r\\n<div *ngIf=\\\"datasource.children\\\" [@expandCollapse]=\\\"isCollapsed ? 'collapsed' : 'expanded'\\\"\\r\\n\\t(@expandCollapse.start)=\\\"toggleAnimStart($event)\\\" (@expandCollapse.done)=\\\"toggleAnimEnd($event)\\\"\\r\\n\\t[ngStyle]=\\\"ecStyles\\\" class=\\\"oc-groups\\\">\\r\\n\\t<ng-container *ngFor=\\\"let node of datasource.children;let i=index\\\">\\r\\n\\t\\t<div *ngIf=\\\"i % groupScale === 0\\\" class=\\\"oc-group\\\">\\r\\n\\t\\t\\t<ng-container *ngFor=\\\"let temp of Arr(groupScale);let j=index;\\\">\\r\\n\\t\\t\\t\\t<orgchart-node *ngIf=\\\"i + j < datasource.children.length\\\" [datasource]=\\\"datasource.children[i + j]\\\"\\r\\n\\t\\t\\t\\t\\t[nodeHeading]=\\\"nodeHeading\\\" [nodeContent]=\\\"nodeContent\\\" [nodeTemplate]=\\\"nodeTemplate\\\"\\r\\n\\t\\t\\t\\t\\t[groupScale]=\\\"groupScale\\\" [select]=\\\"select\\\" (nodeClick)=\\\"onNodeClick($event)\\\">\\r\\n\\t\\t\\t\\t</orgchart-node>\\r\\n\\t\\t\\t</ng-container>\\r\\n\\t\\t</div>\\r\\n\\t</ng-container>\\r\\n</div>\\r\\n\\r\\n<ng-template #defaultNodeTemplate let-nodeData=\\\"datasource\\\" let-heading=\\\"nodeHeading\\\" let-content=\\\"nodeContent\\\">\\r\\n\\t<div class=\\\"oc-node-heading\\\">{{nodeData[heading]}}</div>\\r\\n\\t<div class=\\\"oc-node-content\\\">{{nodeData[content]}}</div>\\r\\n</ng-template>\",\"import { Component, OnInit, Input, Output, EventEmitter, TemplateRef } from '@angular/core';\\r\\nimport { Subscription } from 'rxjs';\\r\\nimport { Node } from '../shared/models/node.model';\\r\\nimport { NodeSelectService } from '../shared/services/node-select.service';\\r\\nimport {\\r\\n  trigger,\\r\\n  state,\\r\\n  style,\\r\\n  animate,\\r\\n  transition\\r\\n} from '@angular/animations';\\r\\n\\r\\n@Component({\\r\\n  selector: 'orgchart-node',\\r\\n  templateUrl: './chart-node.component.html',\\r\\n  styleUrls: ['./chart-node.component.css'],\\r\\n  animations: [\\r\\n    trigger('expandCollapse', [\\r\\n      state(\\r\\n        'expanded',\\r\\n        style({\\r\\n          transform: 'translateY(0)',\\r\\n          opacity: 1\\r\\n        })\\r\\n      ),\\r\\n      state(\\r\\n        'collapsed',\\r\\n        style({\\r\\n          transform: 'translateY(-50px)',\\r\\n          opacity: 0\\r\\n        })\\r\\n      ),\\r\\n      transition('expanded => collapsed', [animate('0.2s')]),\\r\\n      transition('collapsed => expanded', [animate('0.2s')])\\r\\n    ])\\r\\n  ]\\r\\n})\\r\\nexport class ChartNodeComponent implements OnInit {\\r\\n\\r\\n  @Input() datasource: Node;\\r\\n  @Input() nodeHeading;\\r\\n  @Input() nodeContent;\\r\\n  @Input() nodeTemplate: TemplateRef<any>;\\r\\n  @Input() groupScale: number;\\r\\n  @Input() select: string;\\r\\n\\r\\n  @Output() nodeClick = new EventEmitter<any>();\\r\\n\\r\\n  Arr = Array; // Array type captured in a variable\\r\\n  isCollapsed = false;\\r\\n  ecStyles: object;\\r\\n  isSelected: boolean;\\r\\n  subscription: Subscription;\\r\\n\\r\\n  constructor(private nodeSelectService: NodeSelectService) {\\r\\n    // subscribe to node selection status\\r\\n    this.subscription = this.nodeSelectService.getSelect().subscribe(selection => {\\r\\n      if (selection && selection.id) {\\r\\n        this.isSelected = this.datasource.id === selection.id;\\r\\n      } else { // clear selection when empty selection received\\r\\n        this.isSelected = false;\\r\\n      }\\r\\n    });\\r\\n  }\\r\\n\\r\\n  ngOnDestroy() {\\r\\n    // unsubscribe to ensure no memory leaks\\r\\n    this.subscription.unsubscribe();\\r\\n  }\\r\\n\\r\\n  ngOnInit() {\\r\\n  }\\r\\n\\r\\n  toggleChildren() {\\r\\n    this.isCollapsed = !this.isCollapsed;\\r\\n  }\\r\\n\\r\\n  toggleAnimStart(event) {\\r\\n    if (this.isCollapsed) {\\r\\n      // 如果折叠的是根结点的子节点，那么根结点向下的连接线需要隐藏\\r\\n      if (\\r\\n        event.element.parentElement &&\\r\\n        event.element.parentElement.parentElement &&\\r\\n        event.element.parentElement.parentElement.classList.contains('orgchart')\\r\\n      ) {\\r\\n        event.element.previousElementSibling.classList.add('oc-is-collapsed');\\r\\n      }\\r\\n    } else { // 刚一展开的时候，需要马上把子节点们显示出来，以便看到“下滑”效果\\r\\n      this.ecStyles = {\\r\\n        display: 'flex'\\r\\n      };\\r\\n    }\\r\\n  }\\r\\n\\r\\n  toggleAnimEnd(event) {\\r\\n    if (this.isCollapsed) { // 折叠时，“上滑”动画结束后，需要将子节点们隐藏，以便其不占用空间\\r\\n      this.ecStyles = {\\r\\n        display: 'none'\\r\\n      };\\r\\n    } else {\\r\\n      // 如果展开的是根结点的子节点，那么根结点向下的连接线需要显示\\r\\n      if (\\r\\n        event.element.parentElement &&\\r\\n        event.element.parentElement.parentElement &&\\r\\n        event.element.parentElement.parentElement.classList.contains('orgchart')\\r\\n      ) {\\r\\n        event.element.previousElementSibling.classList.remove('oc-is-collapsed');\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n\\r\\n  onClickNode(e) {\\r\\n    this.nodeClick.emit(this.datasource);\\r\\n    if (this.select === 'single') {\\r\\n      this.nodeSelectService.sendSelect(this.datasource.id);\\r\\n    } else if (this.select === 'multiple') {\\r\\n      this.isSelected = !this.isSelected;\\r\\n    }\\r\\n  }\\r\\n\\r\\n  onNodeClick(e) {\\r\\n    this.nodeClick.emit(e);\\r\\n  }\\r\\n\\r\\n}\\r\\n\",\"import { Component, OnInit, Input, Output, EventEmitter, TemplateRef } from '@angular/core';\\r\\nimport { NodeSelectService } from '../shared/services/node-select.service';\\r\\n\\r\\n@Component({\\r\\n  selector: 'organization-chart',\\r\\n  templateUrl: './chart-container.component.html',\\r\\n  styleUrls: ['./chart-container.component.css']\\r\\n})\\r\\nexport class ChartContainerComponent implements OnInit {\\r\\n\\r\\n  @Input() datasource;\\r\\n  @Input() nodeHeading = 'name';\\r\\n  @Input() nodeContent = 'title';\\r\\n  @Input() nodeTemplate: TemplateRef<any>;\\r\\n  @Input() groupScale = 3;\\r\\n  @Input() pan = false;\\r\\n  @Input() zoom = false;\\r\\n  @Input() zoomoutLimit = 0.5;\\r\\n  @Input() zoominLimit = 7;\\r\\n  @Input() containerClass = '';\\r\\n  @Input() chartClass = '';\\r\\n  @Input() select = 'single';\\r\\n\\r\\n  @Output() nodeClick = new EventEmitter<any>();\\r\\n  @Output() chartClick = new EventEmitter();\\r\\n\\r\\n  cursorVal = 'default';\\r\\n  panning = false;\\r\\n  startX = 0;\\r\\n  startY = 0;\\r\\n  transformVal = '';\\r\\n\\r\\n  constructor(private nodeSelectService: NodeSelectService) {}\\r\\n\\r\\n  ngOnInit() {\\r\\n  }\\r\\n\\r\\n  panEndHandler() {\\r\\n    this.panning = false;\\r\\n    this.cursorVal = 'default';\\r\\n  }\\r\\n\\r\\n  panHandler(e) {\\r\\n    let newX = 0;\\r\\n    let newY = 0;\\r\\n    if (!e.targetTouches) {\\r\\n      // pand on desktop\\r\\n      newX = e.pageX - this.startX;\\r\\n      newY = e.pageY - this.startY;\\r\\n    } else if (e.targetTouches.length === 1) {\\r\\n      // pan on mobile device\\r\\n      newX = e.targetTouches[0].pageX - this.startX;\\r\\n      newY = e.targetTouches[0].pageY - this.startY;\\r\\n    } else if (e.targetTouches.length > 1) {\\r\\n      return;\\r\\n    }\\r\\n    if (this.transformVal === '') {\\r\\n      if (this.transformVal.indexOf('3d') === -1) {\\r\\n        this.transformVal = 'matrix(1,0,0,1,' + newX + ',' + newY + ')';\\r\\n      } else {\\r\\n        this.transformVal =\\r\\n          'matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,' + newX + ', ' + newY + ',0,1)';\\r\\n      }\\r\\n    } else {\\r\\n      const matrix = this.transformVal.split(',');\\r\\n      if (this.transformVal.indexOf('3d') === -1) {\\r\\n        matrix[4] = newX.toString();\\r\\n        matrix[5] = newY + ')';\\r\\n      } else {\\r\\n        matrix[12] = newX.toString();\\r\\n        matrix[13] = newY.toString();\\r\\n      }\\r\\n      this.transformVal = matrix.join(',');\\r\\n    }\\r\\n  }\\r\\n\\r\\n  panStartHandler(e) {\\r\\n    if (e.target.querySelectorAll('.node') && e.target.querySelectorAll('.node').length) {\\r\\n      this.panning = false;\\r\\n      return;\\r\\n    } else {\\r\\n      this.cursorVal = 'move';\\r\\n      this.panning = true;\\r\\n    }\\r\\n    let lastX = 0;\\r\\n    let lastY = 0;\\r\\n    if (this.transformVal !== '') {\\r\\n      const matrix = this.transformVal.split(',');\\r\\n      if (this.transformVal.indexOf('3d') === -1) {\\r\\n        lastX = parseInt(matrix[4], 10);\\r\\n        lastY = parseInt(matrix[5], 10);\\r\\n      } else {\\r\\n        lastX = parseInt(matrix[12], 10);\\r\\n        lastY = parseInt(matrix[13], 10);\\r\\n      }\\r\\n    }\\r\\n    if (!e.targetTouches) {\\r\\n      // pand on desktop\\r\\n      this.startX = e.pageX - lastX;\\r\\n      this.startY = e.pageY - lastY;\\r\\n    } else if (e.targetTouches.length === 1) {\\r\\n      // pan on mobile device\\r\\n      this.startX = e.targetTouches[0].pageX - lastX;\\r\\n      this.startY = e.targetTouches[0].pageY - lastY;\\r\\n    } else if (e.targetTouches.length > 1) {\\r\\n      return;\\r\\n    }\\r\\n  }\\r\\n\\r\\n  setChartScale(newScale) {\\r\\n    let matrix = [];\\r\\n    let targetScale = 1;\\r\\n    if (this.transformVal === '') {\\r\\n      this.transformVal =\\r\\n        'matrix(' + newScale + ', 0, 0, ' + newScale + ', 0, 0)';\\r\\n    } else {\\r\\n      matrix = this.transformVal.split(',');\\r\\n      if (this.transformVal.indexOf('3d') === -1) {\\r\\n        targetScale = Math.abs(parseFloat(matrix[3]) * newScale);\\r\\n        if (targetScale > this.zoomoutLimit && targetScale < this.zoominLimit) {\\r\\n          matrix[0] = 'matrix(' + targetScale;\\r\\n          matrix[3] = targetScale;\\r\\n          this.transformVal = matrix.join(',');\\r\\n        }\\r\\n      } else {\\r\\n        targetScale = Math.abs(parseFloat(matrix[5]) * newScale);\\r\\n        if (targetScale > this.zoomoutLimit && targetScale < this.zoominLimit) {\\r\\n          matrix[0] = 'matrix3d(' + targetScale;\\r\\n          matrix[5] = targetScale;\\r\\n          this.transformVal = matrix.join(',');\\r\\n        }\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n\\r\\n  zoomHandler(e) {\\r\\n    const newScale = 1 + (e.deltaY > 0 ? -0.2 : 0.2);\\r\\n    this.setChartScale(newScale);\\r\\n  }\\r\\n\\r\\n  onClickChart(e) {\\r\\n    if (!e.target.closest('.oc-node')) {\\r\\n      this.chartClick.emit();\\r\\n      this.nodeSelectService.clearSelect();\\r\\n    }\\r\\n  }\\r\\n\\r\\n  onNodeClick(nodeData: any) {\\r\\n    this.nodeClick.emit(nodeData);\\r\\n  }\\r\\n}\\r\\n\",\"<div class=\\\"orgchart-container\\\" [ngClass]=\\\"containerClass\\\" (wheel)=\\\"zoom ? zoomHandler($event) : true\\\"\\r\\n\\t(mouseup)=\\\"pan && panning ? panEndHandler() : true\\\">\\r\\n\\t<div class=\\\"orgchart\\\" [ngClass]=\\\"chartClass\\\" [ngStyle]=\\\"{'transform': transformVal, 'cursor': cursorVal}\\\"\\r\\n\\t\\t(mousedown)=\\\"pan ? panStartHandler($event) : true\\\" (mousemove)=\\\"pan && panning ? panHandler($event) : true\\\"\\r\\n\\t\\t(click)=\\\"onClickChart($event)\\\">\\r\\n\\t\\t<orgchart-node [datasource]=\\\"datasource\\\" [nodeHeading]=\\\"nodeHeading\\\" [nodeContent]=\\\"nodeContent\\\"\\r\\n\\t\\t\\t[nodeTemplate]=\\\"nodeTemplate\\\" [groupScale]=\\\"groupScale\\\" [select]=\\\"select\\\" (nodeClick)=\\\"onNodeClick($event)\\\"></orgchart-node>\\r\\n\\t</div>\\r\\n</div>\",\"import { NgModule } from '@angular/core';\\r\\nimport { CommonModule } from '@angular/common';\\r\\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\\r\\nimport { ChartContainerComponent } from './chart-container/chart-container.component';\\r\\nimport { ChartNodeComponent } from './chart-node/chart-node.component';\\r\\nimport { NodeSelectService } from './shared/services/node-select.service';\\r\\n\\r\\n@NgModule({\\r\\n  declarations: [ChartContainerComponent, ChartNodeComponent],\\r\\n  imports: [\\r\\n    CommonModule,\\r\\n    BrowserAnimationsModule\\r\\n  ],\\r\\n  exports: [ChartContainerComponent, ChartNodeComponent],\\r\\n  providers: [NodeSelectService],\\r\\n})\\r\\nexport class OrgchartModule { }\\r\\n\",\"/*\\r\\n * Public API Surface of ng-orgchart\\r\\n */\\r\\n\\r\\nexport * from './lib/components/orgchart/orgchart.module';\\r\\nexport * from './lib/components/orgchart/chart-container/chart-container.component'; \\r\\nexport * from './lib/components/orgchart/chart-node/chart-node.component'; \\r\\n\",\"/**\\n * Generated bundle index. Do not edit.\\n */\\n\\nexport * from './public-api';\\n\"],\"names\":[\"i1.NodeSelectService\",\"_c0\"],\"mappings\":\"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\"}","type":"asset"}]}